<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scd.dcs.mappers.UserMapper">
    <insert id="insertUserEmailAuth" parameterType="EmailAuthEntity">
        INSERT INTO `dcs`.`email_auths` (`email`, `code`, `salt`, `created_at`, `expires_at`, `is_expired`,
                                         `is_verified`, `is_used`)
        VALUES (#{email}, #{code}, #{salt}, #{createdAt}, #{expiresAt}, #{isExpired}, #{isVerified}, #{isUsed})
    </insert>

    <insert id="insertUser" parameterType="UserEntity">
        INSERT INTO `dcs`.`user`(`email`, `password`, `role`)
        VALUES (#{email}, #{password}, #{role})
    </insert>

    <select id="selectUserByEmail" resultType="UserEntity">
        SELECT `email` AS `email`,
               `password` AS `password`,
               `role`  AS `role`
        FROM `dcs`.`user`
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </select>

    <select id="selectEmailAuthByEmailCodeSalt" resultType="EmailAuthEntity">
        SELECT `email`       AS `email`,
               `code`        AS `code`,
               `salt`        AS `salt`,
               `created_at`  AS `createdAt`,
               `expires_at`  AS `expiresAt`,
               `is_expired`  AS `isExpired`,
               `is_verified` AS `isVerified`,
               `is_used`     AS `isUsed`
        FROM `dcs`.`email_auths`
        WHERE BINARY `email` = #{email}
          AND BINARY `code` = #{code}
          AND BINARY `salt` = #{salt}
        LIMIT 1
    </select>

    <update id="updateEmailAuth" parameterType="EmailAuthEntity">
        UPDATE `dcs`.`email_auths`
        SET `created_at`  = #{createdAt},
            `expires_at`  = #{expiresAt},
            `is_expired`  = #{isExpired},
            `is_verified` = #{isVerified},
            `is_used`     = #{isUsed}
        WHERE BINARY `email` = #{email}
          AND BINARY `code` = #{code}
          AND BINARY `salt` = #{salt}
        LIMIT 1
    </update>

    <update id="updateUser" parameterType="UserEntity">
        UPDATE `dcs`.`user`
        SET `password` = #{password},
            `role`     = #{role}
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </update>

</mapper>